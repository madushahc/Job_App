rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own profile data
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to read and manage their own notifications
      match /notifications/{notificationId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null;  // Any authenticated user can create notifications
        allow update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Allow authenticated users to create posts and read all posts
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      // Allow post owner to delete and update all fields
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // Allow any authenticated user to update only likes and dislikes arrays
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId || (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'dislikes']) &&
          request.resource.data.userId == resource.data.userId
        )
      );
      
      // Allow access to comments subcollection
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && 
          request.auth.uid == resource.data.userId;
      }
    }
  }
}
